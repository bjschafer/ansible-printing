---
- name: Include common role
  ansible.builtin.import_role:
    name: common

# prereqs
# https://github.com/Klipper3d/klipper/blob/master/scripts/install-octopi.sh
# TODO split this out based on platform
- name: Install packages (ubuntu/debian)
  ansible.builtin.apt:
    pkg:
      - build-essential
      - python3-virtualenv
      - python3-dev
      - libffi-dev
      - libncurses-dev
      - git

- name: Create directory structure
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
    owner: "{{ common.user_config.username }}"
    group: "{{ common.user_config.group }}"
    mode: "644"
  loop:
    - "{{ common.base_dir }}"
    - "{{ common.base_dir }}/klipper"
    - "{{ common.base_dir }}/config"

- name: Clone klipper repo
  ansible.builtin.git: # noqa latest
    repo: "{{ repo_path }}"
    dest: "{{ common.base_dir }}/klipper/repo"
    update: true
  become: true
  become_user: "{{ common.user_config.username }}"

- name: Create virtualenv
  ansible.builtin.pip:
    virtualenv: "{{ common.base_dir }}/klipper/venv"
    requirements: "{{ common.base_dir }}/klipper/repo/scripts/klippy-requirements.txt"
  become: true
  become_user: "{{ common.user_config.username }}"

- name: Check for base printer.cfg
  ansible.builtin.stat:
    path: "{{ repo_path }}/config/{{ config.base_file }}"
  when: "config.custom_file_path is not defined"
  register: base_printer_cfg

- name: Configure basic printer.cfg
  ansible.builtin.template:
    src: klipper.cfg.j2
    dest: "{{ common.config_file }}"
    mode: "644"
    force: "{{ config.overwrite }}"
  notify: restart klipper
  when:
    - "config.custom_file_path is not defined"
    - "base_printer_cfg.stat.exists"

# FUTURE IMPROVEMENT: permit fetching file from a URL.
- name: Setup custom printer.cfg
  ansible.builtin.template:
    src: "{{ config.custom_file_path }}"
    dest: "{{ common.config_file }}"
    mode: "644"
    force: "{{ config.overwrite }}"
  notify: restart klipper
  when: "config.custom_file_path is defined"

- name: Create systemd unit file
  ansible.builtin.template:
    src: klipper.service.j2
    dest: /etc/systemd/system/klipper.service
    mode: "644"
  notify: restart klipper

- name: Enable systemd unit
  ansible.builtin.systemd:
    daemon_reload: true
    enabled: true
    name: klipper.service
  notify: restart klipper

- name: Setup logrotate
  ansible.builtin.include_role:
    name: common
    tasks_from: logrotate
